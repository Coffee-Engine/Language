{
    "engine.setup.start": "Engine Setup",
    "engine.setup.languageSelect": "Language",
    "engine.setup.layoutSelect": "Layout",

    "engine.projectSetup.title": "Project Setup",
    "engine.projectSetup.create": "Create Project",

    "engine.home.welcome": "Welcome to Coffee Engine",
    "engine.home.splashAuthor": "Splash by [AUTHOR]",
    "engine.home.newProject": "New Project",
    "engine.home.loadFile": "Load from File",
    "engine.home.loadFolder": "Load from Folder",
    "engine.home.noRecentProjects": "No Recent Projects",
    "engine.home.recentProjectsNotAvailable": "Recent projects aren't supported on your browser",
    "engine.home.lastEdited": "Last edited : [TIME]",
    "engine.home.type": "Project Type : [TYPE]",
    "engine.home.type.file": "File",
    "engine.home.type.folder": "Folder",
    "engine.home.engineConfig": "Engine Settings",
    "engine.home.engineCredits": "Engine Credits",

    "engine.credits.welome": "Credits",
    "engine.credits.madeBy": "Coffee Engine is made by",
    "engine.credits.programmers": "Engine Programmers",
    "engine.credits.enginePorter": "Engine Porting",
    "engine.credits.translators": "Translators",
    "engine.credits.assetMaker": "Asset Contributor",
    "engine.credits.resources": "Resources Used",

    "engine.settings.welcome": "Engine Settings",
    "engine.settings.pressAnyKey": "Press any key",
    "engine.settings.space": "space",

    "engine.settings.category.Editor": "Editor",
    "engine.settings.category.Editor.customLanguage": "Custom Language File",
    "engine.settings.category.Editor.changeLanguage": "Change Language",
    "engine.settings.category.Editor.changeLayout": "Change Layout",
    "engine.settings.category.Editor.clearLocalStorage": "Clear Data",
    "engine.settings.category.Editor.clearLocalStorage.cleared": "Data Cleared",

    "engine.settings.category.Window": "Window",
    "engine.settings.category.Window.grabSize": "Window Resize Margin",
    "engine.settings.category.Window.barHeight": "Taskbar Height",
    "engine.settings.category.Window.barStyle": "Taskbar Style",

    "engine.settings.category.Window.barStyle.Flat": "Flat",
    "engine.settings.category.Window.barStyle.Aero": "Shaded",

    "engine.settings.category.Viewport": "Viewport",

    "engine.settings.category.Viewport.mouseSensitivity": "Mouse Sensitivity",
    "engine.settings.category.Viewport.forward": "Move Forward",
    "engine.settings.category.Viewport.left": "Move Left",
    "engine.settings.category.Viewport.back": "Move Back",
    "engine.settings.category.Viewport.right": "Move Right",
    "engine.settings.category.Viewport.up": "Move Up",
    "engine.settings.category.Viewport.down": "Move Down",

    "engine.settings.category.Theme": "Theme",
    "engine.settings.category.Theme.themeColor": "Editor Color",
    "engine.settings.category.Theme.backgroundColor": "Background Color",
    "engine.settings.category.Theme.textColor": "Text Color",
    "engine.settings.category.Theme.warnColor": "Warning Color",
    "engine.settings.category.Theme.errorColor": "Error Color",
    "engine.settings.category.Theme.warnTextColor": "Warning Text Color",
    "engine.settings.category.Theme.errorTextColor": "Error Text Color",
    "engine.settings.category.Theme.linkColor": "Link Color",

    "engine.settings.category.Theme.themeColor.Mocha": "Mocha",
    "engine.settings.category.Theme.themeColor.Cocoa": "Cocoa",
    "engine.settings.category.Theme.themeColor.Creme": "Creme",
    "engine.settings.category.Theme.themeColor.blueBerry": "Blue Berry",
    "engine.settings.category.Theme.themeColor.Astro": "Astro",
    "engine.settings.category.Theme.themeColor.Custom": "Custom",

    "engine.settings.category.SugarCube": "SugarCube",
    "engine.settings.category.SugarCube.notchWidth": "Notch Width",
    "engine.settings.category.SugarCube.notchHeight": "Notch Height",
    "engine.settings.category.SugarCube.cornerSize": "Corner Size",
    "engine.settings.category.SugarCube.padding": "Padding",
    "engine.settings.category.SugarCube.flyOutOpacity": "Flyout Opacity",
    "engine.settings.category.SugarCube.blockColoration": "Block Style",
    "engine.settings.category.SugarCube.blockColoration.Default": "Default",
    "engine.settings.category.SugarCube.blockColoration.Pastel": "Pastel",
    "engine.settings.category.SugarCube.blockColoration.Dark": "Neon",
    "engine.settings.category.SugarCube.blockColoration.Monotone": "Monotone",

    "engine.settings.category.Monaco": "Monaco",
    "engine.settings.category.Monaco.fontSize": "Font Size",
    "engine.settings.category.Monaco.fontStyle": "Font Family",
    "engine.settings.category.Monaco.fontStyle.Serif": "Serif",
    "engine.settings.category.Monaco.fontStyle.Sans-serif": "Sans-serif",
    "engine.settings.category.Monaco.fontStyle.Monospace": "Monospace",
    "engine.settings.category.Monaco.fontStyle.Cursive": "Cursive",
    "engine.settings.category.Monaco.fontStyle.Fantasy": "Fantasy",
    "engine.settings.category.Monaco.themeOverride": "Override Theme",

    "engine.settings.category.Monaco.defaultText": "Text Color",
    "engine.settings.category.Monaco.colorKeyword": "Keyword Color",
    "engine.settings.category.Monaco.colorClassname": "Class Color",
    "engine.settings.category.Monaco.colorDelimiter": "Delimiter Color",
    "engine.settings.category.Monaco.colorDelimiterBracket": "Bracket Color",
    "engine.settings.category.Monaco.colorNumber": "Number Color",
    "engine.settings.category.Monaco.colorNumberUnusual": "Unusual Number Color",
    "engine.settings.category.Monaco.colorString": "String Color",
    "engine.settings.category.Monaco.colorStringEscape": "Escape String Color",
    "engine.settings.category.Monaco.colorStringError": "Bad String Color",
    "engine.settings.category.Monaco.colorRegexp": "Regular Expression Color",
    "engine.settings.category.Monaco.colorRegexpInvalid": "Bad Regular Expression Color",
    "engine.settings.category.Monaco.colorRegexpEscape": "Regular Expression Escape Color",
    "engine.settings.category.Monaco.colorComment": "Comment Color",
    "engine.settings.category.Monaco.colorCommentDoc": "JS Doc Color",
    "engine.settings.category.Monaco.colorCommentDocKeyword": "JS Doc Keyword Color",
    "engine.settings.category.Monaco.colorCommentDocType": "JS Doc Type Color",

    "engine.generic.back": "Back",
    "engine.generic.done": "Done",

    "engine.projectSettings.project": "Project",
    "engine.projectSettings.project.defaultScene": "Default Scene",
    "engine.projectSettings.project.targetFramerate": "Target FPS",
    "engine.projectSettings.project.VSync": "VSync Enabled",

    "engine.projectSettings.viewport": "Viewport",
    "engine.projectSettings.viewport.viewportType": "Viewport Type",
    "engine.projectSettings.viewport.resolution": "Viewport Resolution",
    "engine.projectSettings.viewport.antiAlias": "Anti-Aliasing",

    "engine.projectSettings.viewportType.screen": "Fill Screen",
    "engine.projectSettings.viewportType.fixed": "Fixed",
    "engine.projectSettings.viewportType.strech": "Stretch to Fit",
    "engine.projectSettings.viewportType.integer": "Nearest Integer",

    "engine.projectSettings.broadcasts": "Broadcasts",
    "engine.projectSettings.broadcasts.add": "Add",
    "engine.projectSettings.broadcasts.placeholder": "Broadcast",

    "engine.projectSettings.collision": "Collision",
    "engine.projectSettings.collisionGroups": "Collision Groups",
    "engine.projectSettings.collisionGroups.add": "Add",
    "engine.projectSettings.collisionGroups.placeholder": "Group",

    "engine.projectSettings.extensions": "Extensions",
    "engine.projectSettings.extensions.createExtension": "Create Extension",
    "engine.projectSettings.extensions.extensionInfo": "Author: [Author] | Version: [Version]",

    "editor.fileButton.removeFile": "Remove File",

    "editor.dropdown.project": "Project",
    "editor.dropdown.project.importFiles": "Import file(s)",
    "editor.dropdown.project.importLatte": "Import .latte",
    "editor.dropdown.project.save": "Save Project",
    "editor.dropdown.project.saveSeperate": "Save a Copy",
    "editor.dropdown.project.saveDecaf": "Save Project as .decaf",
    "editor.dropdown.project.projectSettings": "Project Settings",

    "editor.dropdown.window": "Windows",

    "editor.dropdown.scene": "Scene",
    "editor.dropdown.scene.new": "New Scene",
    "editor.dropdown.scene.save": "Save Scene",
    "editor.dropdown.scene.load": "Load Scene",

    "editor.dropdown.runtime": "Game",
    "editor.dropdown.runtime.startHere": "Start",
    "editor.dropdown.runtime.startDefault": "Start in default scene",

    "editor.notification.saveScene": "Scene saved to \"[path]\"",
    "editor.notification.saveScript": "Saved \"[path]\" sucessfully",
    "editor.notification.compileScript": "Compiled \"[input]\" as \"[output]\" sucessfully",
    "editor.notification.extensionReloaded": "Reloaded \"[extension]\" sucessfully",

    "editor.window.projectManager": "Project Settings",
    "editor.window.extensionWizard": "Extension Wizard",
    "editor.window.extensionWizard.previous": "previous",
    "editor.window.extensionWizard.next": "next",
    
    "editor.window.extensionWizard.firstPage": "Welcome to the Coffee Engine extension wizard! This is a tool that will help you quickly set up the skeleton for an extension. To continue press \"Next\"",

    "editor.window.extensionWizard.secondPage.extensionName": "Extension Name",
    "editor.window.extensionWizard.secondPage.extensionName.placeholder": "Cool Extension",
    "editor.window.extensionWizard.secondPage.authorName": "Your Name",
    "editor.window.extensionWizard.secondPage.authorName.placeholder": "Barista",
    "editor.window.extensionWizard.secondPage.version": "Version",
    "editor.window.extensionWizard.secondPage.version.placeholder": "1.0.0",

    "editor.window.extensionWizard.thirdPage": "What would you like to be automatically generated for you?",
    "editor.window.extensionWizard.thirdPage.hasScript": "Engine Script",
    "editor.window.extensionWizard.thirdPage.hasEditorScript": "Editor Script",
    "editor.window.extensionWizard.thirdPage.hasNode": "Custom Node",
    "editor.window.extensionWizard.thirdPage.hasSugarcubeBlocks": "Sugarcube Blocks",
    "editor.window.extensionWizard.thirdPage.hasWindow": "Custom Window",
    
    "editor.window.extensionWizard.engineText": "This script will run in both the engine and editor.",
    "editor.window.extensionWizard.editorText": "This script will run in the editor.",
    "editor.window.extensionWizard.logText": "Extension [name] loaded!",
    "editor.window.extensionWizard.defaultBlock": "log timer",
    "editor.window.extensionWizard.defaultWindow": "The \"Content\" argument in \"init\" is an HTML div",
    "editor.window.extensionWizard.cleanupComment": "extension cleanup code",

    "editor.window.debugLog": "Log",
    "editor.window.debugLog.clear": "clear",

    "editor.window.sceneTree": "Scene Tree",
    "editor.window.sceneTree.addObject": "Add Node",

    "editor.window.sceneTree.addChild": "Add Child",
    "editor.window.sceneTree.addDuplicateChild": "Duplicate as Child",
    "editor.window.sceneTree.duplicate": "Duplicate Node",
    "editor.window.sceneTree.delete": "Remove Node",

    "editor.window.nodeMaker": "Add a Node",

    "editor.window.fileExplorer": "Project Files",
    "editor.window.fileExplorer.select": "Select a File",
    "editor.window.fileExplorer.reading": "Reading Files",
    "editor.window.fileExplorer.delete": "Delete",
    "editor.window.fileExplorer.rename": "Rename",
    "editor.window.fileExplorer.package": "Package",
    "editor.window.fileExplorer.openInCode": "Open in Code Editor",

    "editor.window.viewport": "Viewport",

    "editor.window.codeEditor": "Code Editor",
    "editor.window.codeEditor.newScript": "New Script",
    "editor.window.codeEditor.saveScript": "Save Script",
    "editor.window.codeEditor.loadScript": "Load Script",
    "editor.window.codeEditor.openScript": "Open Shortcut",
    "editor.window.codeEditor.closeScript": "Remove Shortcut",

    "editor.window.createScript": "New Script",
    "editor.window.createScript.inherits": "inherits",
    "editor.window.createScript.selectInheritence": "choose inheritor",
    "editor.window.sugarcube": "SugarCube",
    "editor.window.javascript": "Javascript",
    "editor.window.cappuccino": "Cappuccino",
    "editor.window.glslShader": "Shader",

    "editor.window.createScene": "New Scene",

    "editor.window.typed.commentMessage": "This is a default behavior!",
    "editor.window.typed.initMessage": "Code for initilization goes here.",
    "editor.window.typed.updateMessage": "Code for each frame goes here.",
    "editor.window.typed.clickUncommentMessage": "If you want custom click code uncomment this function.",
    "editor.window.typed.clickMessage": "Code for when the node is clicked",
    "editor.window.typed.drawUncommentMessage": "If you want custom draw code uncomment this function.",
    "editor.window.typed.drawMessage": "Draw Code Here",

    "editor.window.typed.shaderMessage": "This is a shader!",
    "editor.window.typed.vertexMessage": "Code for vertex manipulation goes here.",
    "editor.window.typed.fragmentMessage": "Code for pixel manipulation goes here.",

    "editor.window.createVar": "Create a Variable",
    "editor.window.createVar.temporaryName": "Variable Name",
    "editor.window.createVar.variable": "Variable",
    "editor.window.createVar.list": "List",
    "editor.window.createVar.object": "Table",

    "editor.window.createBlock": "Create a Block",
    "editor.window.createBlock.textInput": "Text",
    "editor.window.createBlock.numberInput": "Number",
    "editor.window.createBlock.colorInput": "Color",
    "editor.window.createBlock.arrayInput": "List",
    "editor.window.createBlock.objectInput": "Object",
    "editor.window.createBlock.booleanInput": "Boolean",
    "editor.window.createBlock.addLabel": "Label",
    "editor.window.createBlock.statementInput": "Statement",
    "editor.window.createBlock.referenceInput": "Function",
    "editor.window.createBlock.returns": "Returns a Value",

    "editor.window.properties": "Properties",
    "editor.window.properties.noFile": "No file selected",
    "editor.window.properties.notFound": "No editable properties found",

    "sugarcube.motion": "Motion",
    "sugarcube.motion.block.movesteps": "move [steps] steps",
    "sugarcube.motion.block.gotoxy": "go to x:[x] y:[y]",
    "sugarcube.motion.block.gotoxyz": "go to x:[x] y:[y] z:[z]",
    "sugarcube.motion.block.setx": "set x to [x]",
    "sugarcube.motion.block.sety": "set y to [y]",
    "sugarcube.motion.block.setz": "set z to [z]",
    "sugarcube.motion.block.changex": "change x by [x]",
    "sugarcube.motion.block.changey": "change y by [y]",
    "sugarcube.motion.block.changez": "change z by [z]",
    "sugarcube.motion.block.xposition": "x position",
    "sugarcube.motion.block.yposition": "y position",
    "sugarcube.motion.block.zposition": "z position",
    "sugarcube.motion.block.turnAround2D": "turn [icon] [degrees] degrees",
    "sugarcube.motion.block.setrotation2D": "set my direction to be [degrees]",
    "sugarcube.motion.block.lookAtXY": "look towards x: [x] y: [y]",
    "sugarcube.motion.block.turnAround3D": "turn [icon] [degrees] degrees on the [axis] axis",
    "sugarcube.motion.block.setrotation3D": "set my [axis] to be [degrees]",
    "sugarcube.motion.block.lookAtXYZ": "look towards x: [x] y: [y] z: [z]",
    "sugarcube.motion.block.direction": "direction",
    "sugarcube.motion.yaw": "yaw",
    "sugarcube.motion.pitch": "pitch",
    "sugarcube.motion.roll": "roll",

    "sugarcube.looks": "Looks",
    "sugarcube.looks.block.setSprite": "set sprite to [image]",
    "sugarcube.looks.block.getSprite": "current sprite",
    "sugarcube.looks.block.setMesh": "set mesh to [mesh]",
    "sugarcube.looks.block.getMesh": "current mesh",
    "sugarcube.looks.block.setLightColor": "set light color to [color]",
    "sugarcube.looks.block.getLightColor": "light color",
    "sugarcube.looks.block.setRadius": "set light radius to [radius]",
    "sugarcube.looks.block.getRadius": "light radius",
    "sugarcube.looks.block.setFalloff": "set light falloff to [falloff]",
    "sugarcube.looks.block.getFalloff": "light falloff",
    "sugarcube.looks.block.setTint": "tint myself [tint]",
    "sugarcube.looks.block.setScale3D": "set scale to width: [x] height: [y] depth:[z]",
    "sugarcube.looks.block.setScale2D": "set scale to width: [x] height: [y]",
    "sugarcube.looks.block.setScaleX": "set width to [x]",
    "sugarcube.looks.block.setScaleY": "set height to [y]",
    "sugarcube.looks.block.setScaleZ": "set depth to [z]",
    "sugarcube.looks.block.changeScaleX": "change width by [x]",
    "sugarcube.looks.block.changeScaleY": "change height by [y]",
    "sugarcube.looks.block.changeScaleZ": "change depth by [z]",
    "sugarcube.looks.block.getScaleX": "width",
    "sugarcube.looks.block.getScaleY": "height",
    "sugarcube.looks.block.getScaleZ": "depth",

    "sugarcube.sounds": "Sounds",
    "sugarcube.sounds.block.playGlobal": "start sound [sound]",
    "sugarcube.sounds.block.playAtXY": "start sound [sound] at x: [x] y: [y]",
    "sugarcube.sounds.block.playAtXYZ": "start sound [sound] at x: [x] y: [y] z: [z]",
    "sugarcube.sounds.block.setProperty": "set [property] to [value]",
    "sugarcube.sounds.block.getProperty": "get [property]",
    "sugarcube.sounds.block.loadSound": "load [sound]",
    "sugarcube.sounds.block.lastPlayedSound": "last played sound",
    "sugarcube.sounds.block.setPropertyOn": "set [property] for [sound] to [value]",
    "sugarcube.sounds.block.pause": "pause [sound]",
    "sugarcube.sounds.block.resume": "resume [sound]",
    "sugarcube.sounds.block.currentTime": "current time of [sound]",
    "sugarcube.sounds.block.isPaused": "is [sound] paused?",

    "sugarcube.events": "Events",
    "sugarcube.events.block.onStart": "on ready",
    "sugarcube.events.block.onUpdate": "every frame",
    "sugarcube.events.block.whenKeyPressed": "when [key] key pressed",
    "sugarcube.events.block.whenClicked": "when I'm clicked",
    "sugarcube.events.block.broadcastRecieve": "when I recieve [message]",
    "sugarcube.events.block.broadcastSend": "broadcast [message]",

    "sugarcube.controls": "Controls",
    "sugarcube.controls.block.wait": "wait [seconds] seconds",
    "sugarcube.controls.block.ifStatement": "if [condition] then [dummy] [statement]",
    "sugarcube.controls.block.ifElse_Statement": "if [condition] then [dummy] [statement] else [dummy2] [statement2]",
    "sugarcube.controls.block.switch_Statement": "switch [condition] [image] [statement] default [dummy] [default]",
    "sugarcube.controls.block.branch_Statement": "case [condition] [statement]",
    "sugarcube.controls.block.repeat": "repeat [num] [dummy] [statement] [image]",
    "sugarcube.controls.block.foreach": "for each item in [array] do [dummy] [statement] [image]",
    "sugarcube.controls.block.repeatUNT": "repeat until [condition] [dummy] [statement] [image]",
    "sugarcube.controls.block.while": "while [condition] [dummy] [statement] [image]",
    "sugarcube.controls.block.continue": "continue [image]",
    "sugarcube.controls.block.break": "break [image]",
    "sugarcube.controls.block.doAs": "do [image] [dummy] [statement] as [target]",
    "sugarcube.controls.block.call": "call [reference]",

    "sugarcube.sensing": "Sensing",
    "sugarcube.sensing.block.isTouching": "colliding?",
    "sugarcube.sensing.block.pushDirections": "push directions",
    "sugarcube.sensing.block.isKeyDown": "key [key] pressed?",
    "sugarcube.sensing.block.mouseDown": "[button] mouse button down",
    "sugarcube.sensing.block.mouseX": "mouse x",
    "sugarcube.sensing.block.mouseY": "mouse y",
    "sugarcube.sensing.block.lockMouse": "set mouse lock [mode]",
    "sugarcube.sensing.block.lockStatus": "mouse locked?",
    "sugarcube.sensing.block.controllerConnected": "is controller [id] connected?",
    "sugarcube.sensing.block.controllerID": "ID of controller [id]",
    "sugarcube.sensing.block.controllerAxis": "axis [axis] of controller [id]",
    "sugarcube.sensing.block.controllerButtonValue": "value of [button] on controller [id]",
    "sugarcube.sensing.block.controllerButton": "is [button] down on controller [id]",
    "sugarcube.sensing.block.timer": "timer",
    "sugarcube.sensing.block.deltaTime": "frame time",
    "sugarcube.sensing.block.dayMonthYear": "current [timespan]",
    "sugarcube.sensing.menu.mouseButtons.primary": "primary",
    "sugarcube.sensing.menu.mouseButtons.secondary": "secondary",
    "sugarcube.sensing.menu.mouseButtons.tertiary": "tertiary",
    "sugarcube.sensing.menu.mouseButtons.quaternary": "quaternary",
    "sugarcube.sensing.menu.mouseButtons.quinary": "quinary",
    "sugarcube.sensing.menu.lockStatus.lock": "enabled",
    "sugarcube.sensing.menu.lockStatus.unlock": "disabled",
    "sugarcube.sensing.menu.timespans.century": "century",
    "sugarcube.sensing.menu.timespans.decade": "decade",
    "sugarcube.sensing.menu.timespans.year": "year",
    "sugarcube.sensing.menu.timespans.month": "month",
    "sugarcube.sensing.menu.timespans.day": "date",
    "sugarcube.sensing.menu.timespans.weekday": "weekday",
    "sugarcube.sensing.menu.timespans.hour": "hour",
    "sugarcube.sensing.menu.timespans.minute": "minute",
    "sugarcube.sensing.menu.timespans.second": "second",
    "sugarcube.sensing.menu.timespans.millisecond": "millisecond",
    "sugarcube.sensing.field.controller.Left-Stick": "left stick",
    "sugarcube.sensing.field.controller.left-stick-x": "left stick horizontal",
    "sugarcube.sensing.field.controller.left-stick-y": "left stick vertical",
    "sugarcube.sensing.field.controller.Right-Stick": "right stick",
    "sugarcube.sensing.field.controller.right-stick-x": "right stick horizontal",
    "sugarcube.sensing.field.controller.right-stick-y": "right stick vertical",
    "sugarcube.sensing.field.controller.Bottom-Face": "bottom face button",
    "sugarcube.sensing.field.controller.Top-Face": "top face button",
    "sugarcube.sensing.field.controller.Right-Face": "right face button",
    "sugarcube.sensing.field.controller.Left-Face": "left face button",
    "sugarcube.sensing.field.controller.DPad-Down": "down",
    "sugarcube.sensing.field.controller.DPad-Up": "up",
    "sugarcube.sensing.field.controller.DPad-Right": "right",
    "sugarcube.sensing.field.controller.DPad-Left": "left",
    "sugarcube.sensing.field.controller.Start": "start",
    "sugarcube.sensing.field.controller.Select": "select",
    "sugarcube.sensing.field.controller.Left-Bumper": "left bumper",
    "sugarcube.sensing.field.controller.Left-Trigger": "left trigger",
    "sugarcube.sensing.field.controller.Right-Bumper": "right bumper",
    "sugarcube.sensing.field.controller.Right-Trigger": "right trigger",

    "sugarcube.scene": "Scene",
    "sugarcube.scene.block.loadScene": "load scene [scene]",
    "sugarcube.scene.block.getParent": "my parent",
    "sugarcube.scene.block.getMyself": "myself",
    "sugarcube.scene.block.getRoot": "scene root",
    "sugarcube.scene.block.getName": "name of [object]",
    "sugarcube.scene.block.getScript": "script of [object]",
    "sugarcube.scene.block.getChildren": "children of [object]",
    "sugarcube.scene.block.getParentOf": "parent of [object]",
    "sugarcube.scene.block.instansiateNode": "create [node]",
    "sugarcube.scene.block.setParentOf": "set parent of [node] to [parent]",
    "sugarcube.scene.block.unparent": "unparent [node]",
    "sugarcube.scene.block.setVariable": "set variable [variable] of [object] to [value]",
    "sugarcube.scene.block.getVariable": "variable [variable] of [object]",

    "sugarcube.operators": "Operators",
    "sugarcube.operators.block.add": "[A] + [B]",
    "sugarcube.operators.block.sub": "[A] - [B]",
    "sugarcube.operators.block.mul": "[A] * [B]",
    "sugarcube.operators.block.div": "[A] / [B]",
    "sugarcube.operators.block.pow": "[A] ^ [B]",
    "sugarcube.operators.block.root": "[A] √ [B]",
    "sugarcube.operators.block.inverse": "-[A]",
    "sugarcube.operators.block.randomNumber": "random number between [A] and [B]",
    "sugarcube.operators.block.notEqual": "[A] ≠ [B]",
    "sugarcube.operators.block.lessThan": "[A] < [B]",
    "sugarcube.operators.block.lessThanEqualTo": "[A] ≤ [B]",
    "sugarcube.operators.block.equalTo": "[A] = [B]",
    "sugarcube.operators.block.moreThan": "[A] > [B]",
    "sugarcube.operators.block.moreThanEqualTo": "[A] ≥ [B]",
    "sugarcube.operators.block.modulo": "[A] mod [B]",
    "sugarcube.operators.block.round": "round [A]",
    "sugarcube.operators.block.arithmatic": "[A] of [B]",
    "sugarcube.operators.block.and": "[A] and [B]",
    "sugarcube.operators.block.or": "[A] or [B]",
    "sugarcube.operators.block.xor": "either [A] or [B]",
    "sugarcube.operators.block.not": "not [A]",
    "sugarcube.operators.block.true": "true",
    "sugarcube.operators.block.false": "false",
    "sugarcube.operators.menu.operations.abs": "abs",
    "sugarcube.operators.menu.operations.floor": "floor",
    "sugarcube.operators.menu.operations.ceiling": "ceiling",
    "sugarcube.operators.menu.operations.sqrt": "sqrt",
    "sugarcube.operators.menu.operations.sin": "sin",
    "sugarcube.operators.menu.operations.cos": "cos",
    "sugarcube.operators.menu.operations.tan": "tan",
    "sugarcube.operators.menu.operations.asin": "asin",
    "sugarcube.operators.menu.operations.acos": "acos",
    "sugarcube.operators.menu.operations.atan": "atan",
    "sugarcube.operators.menu.operations.ln": "ln",
    "sugarcube.operators.menu.operations.log": "log",
    "sugarcube.operators.menu.operations.ePOW": "e ^",
    "sugarcube.operators.menu.operations.tenPOW": "10 ^",

    "sugarcube.strings": "Strings",
    "sugarcube.strings.value.fruit1": "apple",
    "sugarcube.strings.value.fruit2": "banana",
    "sugarcube.strings.value.fruit3": "pear",
    "sugarcube.strings.block.length": "length of [A]",
    "sugarcube.strings.block.join": "join [A] [B]",
    "sugarcube.strings.block.reverse": "reverse [A]",
    "sugarcube.strings.block.repeat": "repeat [A] [B] times",
    "sugarcube.strings.block.replace": "replace [A] in [B] with [C]",
    "sugarcube.strings.block.replace.defaultValue": "apple banana",
    "sugarcube.strings.block.characterAt": "letter [A] of [B]",
    "sugarcube.strings.block.charactersBetween": "letters [A] to [B] of [C]",
    "sugarcube.strings.block.split": "split [A] at every [B]",
    "sugarcube.strings.block.split.defaultValue.combined": "apple,banana,pear",
    "sugarcube.strings.block.split.defaultValue.splitter": ",",
    "sugarcube.strings.block.ifThen": "if [A] then [B] else [C]",
    "sugarcube.strings.block.convertToCase": "make [A] [B]",
    "sugarcube.strings.block.includes": "[A] contains [B]",
    "sugarcube.strings.menu.caseTypes.uppercase": "uppercase",
    "sugarcube.strings.menu.caseTypes.lowercase": "lowercase",
    "sugarcube.strings.menu.caseTypes.title-case": "title-case",

    "sugarcube.variables": "Variables",
    "sugarcube.variables.block.openVariableMenu": "New Variable",
    "sugarcube.variables.block.setVariable": "set [variable] to [val]",
    "sugarcube.variables.block.setVariable.defaultValue": "cocoa",
    "sugarcube.variables.block.changeVariable": "change [variable] by [val]",
    "sugarcube.variables.block.multiplyVariable": "multiply [variable] by [val]",
    "sugarcube.variables.contextMenu.removeVariable": "Remove Variable",

    "sugarcube.variables.objectLike.substitute": "substitute [objectLike] with [value]",
    "sugarcube.variables.objectLike.originate": "make [objectLike] original",
    "sugarcube.variables.objectLike.deletionConfirmation": "Are you sure you want to delete \"[variable]\"?",

    "sugarcube.lists": "Lists",
    "sugarcube.lists.value.item": "item",
    "sugarcube.lists.value.greeting": "Hello",
    "sugarcube.lists.block.openVariableMenu": "New List",
    "sugarcube.lists.block.addItem": "add [item] to [list]",
    "sugarcube.lists.block.removeItem": "remove item [item] from [list]",
    "sugarcube.lists.block.clearList": "clear [list]",
    "sugarcube.lists.block.insertItem": "insert [value] before item [item] of [list]",
    "sugarcube.lists.block.replaceItem": "replace item [item] of [list] with [value]",
    "sugarcube.lists.block.getItem": "item [item] of [list]",
    "sugarcube.lists.block.getItemNumber": "item # of [value] in [list]",
    "sugarcube.lists.block.length": "length of [list]",
    "sugarcube.lists.block.getItemContainment": "[list] contains [value]",
    "sugarcube.lists.contextMenu.removeList": "Remove List",

    "sugarcube.tables": "Tables",
    "sugarcube.tables.value.key": "key",
    "sugarcube.tables.block.openVariableMenu": "New Table",
    "sugarcube.tables.block.setKey": "set [key] in [table] to [val]",
    "sugarcube.tables.block.getKey": "get [key] in [table]",
    "sugarcube.tables.block.getKeys": "keys of [table]",
    "sugarcube.tables.block.getValues": "values of [table]",
    "sugarcube.tables.contextMenu.removeTable": "Remove Table",

    "sugarcube.myblocks": "My Blocks",
    "sugarcube.myblocks.block.openCustomBlockMenu": "New Block",
    "sugarcube.myblocks.block.define": "Define : ",
    "sugarcube.myblocks.contextMenu.editCustomBlock": "Edit custom block",
    "sugarcube.myblocks.contextMenu.removeCustomBlock": "Remove custom block",
    "sugarcube.myblocks.contextMenu.makeReference": "Turn into reference",
    "sugarcube.myblocks.contextMenu.makeOriginal": "Turn into block",

    "sugarcube.debugging": "Debug",
    "sugarcube.debugging.block.log.defaultValue": "Log Me!",
    "sugarcube.debugging.block.log": "log [ITEM]",
    "sugarcube.debugging.block.warn.defaultValue": "Whoops!",
    "sugarcube.debugging.block.warn": "warn [ITEM]",
    "sugarcube.debugging.block.error.defaultValue": "An Error",
    "sugarcube.debugging.block.error": "error [ITEM]",

    "sugarcube.files": "Files",
    "sugarcube.files.block.setFile": "set file [file] to [content]",
    "sugarcube.files.block.getFile": "contents of [file] as [type]",
    "sugarcube.files.block.getFileExistance": "does [file] exist",
    "sugarcube.files.menu.asMenu.text": "Text",
    "sugarcube.files.menu.asMenu.JSON": "Table",
    "sugarcube.files.menu.asMenu.byte": "Byte Array",
    "sugarcube.files.menu.asMenu.dataURL": "Data URL",

    "engine.nodeNames.scene": "Scene",
    "engine.nodeNames.Node": "Node",
    "engine.nodeNames.Node2D": "Node 2D",
    "engine.nodeNames.PhysicalNode2D": "Physical Node 2D",
    "engine.nodeNames.Collision2D": "Collision 2D",
    "engine.nodeNames.CircleCollision": "Circle Collision",
    "engine.nodeNames.RectangleCollision": "Rectangle Collision",
    "engine.nodeNames.Sprite": "Sprite",
    "engine.nodeNames.Node3D": "Node 3D",
    "engine.nodeNames.PhysicalNode3D": "Physical Node 3D",
    "engine.nodeNames.Collision3D": "Collision 3D",
    "engine.nodeNames.MeshCollision": "Mesh Collision",
    "engine.nodeNames.SphereCollision": "Sphere Collision",
    "engine.nodeNames.BoxCollision": "Box Collision",
    "engine.nodeNames.SpotLight": "Spot Light",
    "engine.nodeNames.PointLight": "Point Light",
    "engine.nodeNames.Sun": "Sun",
    "engine.nodeNames.Camera": "Camera",
    "engine.nodeNames.MeshDisplay": "Mesh Display",
    "engine.nodeNames.Billboard": "Billboard",
    "engine.nodeNames.Sprite3D": "Sprite 3D",

    "engine.nodePropertyLabels.NothingHere": "Nothing here!",
    "engine.nodeProperties.Node.name": "Name",
    "engine.nodeProperties.Node.script": "Script",
    "engine.nodeProperties.Node.modulatedColor": "Modulated Color",
    "engine.nodeProperties.Node.position": "Position",
    "engine.nodeProperties.Node.rotation": "Rotation",
    "engine.nodeProperties.Node.scale": "Scale",
    "engine.nodeProperties.Node2D.layer": "Layer",
    "engine.nodeProperties.Sprite.spritePath": "Sprite Path",
    "engine.nodeProperties.Sprite.scaleMultiplier": "Scale Multiplier",
    "engine.nodeProperties.Billboard.omnidirectional": "Omnidirectional",
    "engine.nodeProperties.MeshDisplay.meshPath": "Mesh Path",
    "engine.nodeProperties.MeshDisplay.material": "Material",
    "engine.nodeProperties.Camera.fov": "FOV",
    "engine.nodeProperties.Camera.nearPlane": "Near Plane",
    "engine.nodeProperties.Camera.flatten": "Orthographic",
    "engine.nodeProperties.Camera.zoom": "Camera Zoom",
    "engine.nodeProperties.Camera.active": "Active",
    "engine.nodeProperties.Light.radius": "Radius",
    "engine.nodeProperties.Light.color": "Color",
    "engine.nodeProperties.SpotLight.falloff": "Falloff",
    "engine.nodeProperties.Collision.group": "Collision Group",

    "engine.nodeProperties.scene.skyColor": "Sky Color",
    "engine.nodeProperties.scene.horizonColor": "Horizon Color",
    "engine.nodeProperties.scene.groundColor": "Ground Color",
    "engine.nodeProperties.scene.centerColor": "Core Color",
    "engine.nodeProperties.scene.ambientColor": "Ambient Color",

    "engine.nodeProperties.scene.fogType": "Fog Type",
    "engine.nodeProperties.scene.fogType.none": "No fog",
    "engine.nodeProperties.scene.fogType.retro": "Retro",
    "engine.nodeProperties.scene.fogType.simple": "Simple",
    "engine.nodeProperties.scene.fogType.sunAffected": "Sun Affected",
    
    "engine.nodeProperties.scene.fogStart": "Fog Start",
    "engine.nodeProperties.scene.fogFalloff": "Fog Falloff",
    "engine.nodeProperties.scene.fogColor": "Fog Color",
    "engine.nodeProperties.scene.skyEffect": "Fog Sky Mix",
    "engine.nodeProperties.scene.sunMultiplier": "Fog Sun Affectiveness",

    "engine.fileProperties.Shader.shader" : "Shader"
}
